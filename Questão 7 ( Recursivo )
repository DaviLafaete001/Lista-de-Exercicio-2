#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>

typedef struct Lista {
	
    int valor;
    struct Lista* proximo;
    
} Lista;


int busca_recursiva(Lista* lista, int valor) {
    if (lista == NULL) {
        return 0;  
    }

    if (lista->valor == valor) {
        return 1; 
    }

    if (lista->valor > valor) {
        return 0;  
    }

    return busca_recursiva(lista->proximo, valor);  
}

Lista* criar_novo_no(int valor) {
    Lista* novo = (Lista*)malloc(sizeof(Lista));
    
    if (novo == NULL) {
        printf("Erro ao alocar memória.\n");
        exit(1);
    }
    novo->valor = valor;
    novo->proximo = NULL;
    return novo;
}

void inserir_em_ordem(Lista** lista, int valor) {
    Lista* novo = criar_novo_no(valor);
    
    if (*lista == NULL || (*lista)->valor >= valor) {
        novo->proximo = *lista;
        *lista = novo;
    } else {
        Lista* atual = *lista;
        while (atual->proximo != NULL && atual->proximo->valor < valor) {
            atual = atual->proximo;
        }
        novo->proximo = atual->proximo;
        atual->proximo = novo;
    }
}

int main() {
    Lista* lista = NULL;

    inserir_em_ordem(&lista, 10);
    inserir_em_ordem(&lista, 5);
    inserir_em_ordem(&lista, 15);
    inserir_em_ordem(&lista, 7);

    int valor = 7;
    
    if (busca_recursiva(lista, valor)) {
        printf("Valor %d encontrado (recursivo).\n", valor);
    } else {
        printf("Valor %d não encontrado (recursivo).\n", valor);
    }

    return 0;
}
